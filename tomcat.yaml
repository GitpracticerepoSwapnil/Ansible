---
- name: jdk 11
  hosts: all
  become: yes
  vars:
    java_package: openjdk-11-jdk
    version: "10.1.8"
    major_version: "10"
    user_name: tomcat
    group_name: tomcat
    user_shell: /bin/false
    User_home: /opt/tomcat
    tomcat_service: tomcat.service
  tasks:
    - name: install jdk11
      ansible.builtin.apt:
        update_cache: true
        name: "{{ java_package }}"
        state: present
    - name: create group
      ansible.builtin.group:
        name: "{{group_name}}"
        state: present
    - name: create user
      ansible.builtin.user:
        name: "{{ user_name }}"
        group: "{{ group_name }}"
        create_home: yes
        home: "{{ User_home }}"
        shell: {{user_shell}}
        state: present
    - name: untar the file
      ansible.builtin.unarchive:
        src: "https://www-eu.apache.org/dist/tomcat/tomcat-{{ major_version }}/v{{ version }}/bin/apache-tomcat-{{ version }}.tar.gz"
        dest: "{{ User_home }}"
        remote_src: yes
    - name: link the file
      ansible.builtin.file:
        src: "{{ User_home }}/apache-tomcat-{{ version }}"
        dest: "{{ User_home }}/latest"
        state: link
    - name: permissions
      ansible.builtin.file:
        dest: "{{ User_home }}"
        recurse: yes
        owner: "{{user_name}}"
        group: "{{group_name}}"
        state: directory
    - name: running shell
      ansible.builtin.command: "sudo sh -c 'chmod +x {{ User_home }}/latest/bin/*.sh'"
    - name: copy tomcat service
      ansible.builtin.copy:
        src: {{ tomcat_service }}
        dest: /etc/systemd/system/{{ tomcat_service }}
        group: "{{group_name}}"
        owner: "{{user_name}}"
    - name: demon reload
      ansible.builtin.systemd:
        name: {{ tomcat_service }}
        daemon_reload: yes
        enabled: true
        state: "started"
    - name: copy context xml
      ansible.builtin.copy:
        src: context.xml
        dest: "{{ User_home }}/latest/webapps/manager/META-INF/context.xml"
        group: "{{group_name}}"
        owner: "{{user_name}}"
    - name: copy host context xml
      ansible.builtin.copy:
        src: host-context.xml
        dest: "{{ User_home }}/latest/webapps/host-manager/META-INF/context.xml"
        group: "{{group_name}}"
        owner: "{{user_name}}"
    - name: copy user xml
      ansible.builtin.copy:
        src: tomcat-users.xml
        dest: "{{ User_home }}/latest/conf/tomcat-users.xml"
        group: "{{group_name}}"
        owner: "{{user_name}}"
    - name: demon reload
      ansible.builtin.systemd:
        name: {{ tomcat_service }}
        state: "restarted"
